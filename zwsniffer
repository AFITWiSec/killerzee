#!/usr/bin/env python

import sys
import argparse
from killerzee import *
from signal import *
from datetime import *
from rflib import *

sigstop=False


def sighandler(signal, frame):
    global sigstop
    sigstop=True

	
if __name__ == "__main__":
    signal(SIGINT, sighandler)
    destid=None

    # Command-line arguments
    parser = argparse.ArgumentParser()
    parser.add_argument('-p', '--preamble', dest='preamble_len', action='store', type=int, default=80, help='preamble length in bits (optional)')
    parser.add_argument('-r', '--rfprofile', dest='rfprofile', action='store', default="R2", help='specify the RF profile (one or R1, R2, or R3)')
    parser.add_argument('-c', '--country', dest='countrycode', action='store', default="US", help='specify the 2-letter country code')

    args = parser.parse_args()

    if args.rfprofile is not None:
        if args.rfprofile.upper() == 'R1':
            args.rfprofile = RFPROFILE_R1
        elif args.rfprofile.upper() == 'R2':
            args.rfprofile = RFPROFILE_R2
        elif args.rfprofile.upper() == 'R3':
            print >>sys.stderr, "ERROR: R3 is not yet supported."
            sys.exit(1)
        else:
            print >>sys.stderr, "ERROR: Invalid RF Profile Specified: %s"%args.rfprofile
            sys.exit(1)

    kz = KillerZee(countrycode=args.countrycode,rfprofile=args.rfprofile)
    _kzd = KillerZeeDecode()

	while not sigstop:
		try:
			p = kz.pcap_next()
        except EOFError:
            #print "EOF"
			break
        if p != None:
			if calcfcs_r2(p[1]) == 0: # Check FCS
				hexdump(p[1])

    print "EXIT"